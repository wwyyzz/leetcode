/**
 * 739. 每日温度
 * 根据每日 气温 列表，请重新生成一个列表，对应位置的输入是你需要再等待多久温度才会升高的天数。
 * 如果之后都不会升高，请输入 0 来代替。
 *
 * 例如，给定一个列表 temperatures = [73, 74, 75, 71, 69, 72, 76, 73]，
 * 你的输出应该是 [1, 1, 4, 2, 1, 1, 0, 0]。
 *
 * 提示：气温 列表长度的范围是 [1, 30000]。每个气温的值的都是 [30, 100] 范围内的整数。
 */

package Question.Q739_pass;

/**
 * 思路：使用双 for 循环，效率比较低，但是容易理解
 *
 * 37 / 37 个通过测试用例
 * 状态：通过
 * 执行用时：404 ms
 *
 * 我的提交执行用时
 * 已经战胜 19.64 % 的 java 提交记录
 */
public class Solution1 {
    public int[] dailyTemperatures(int[] T) {
//        首先创建用于保存结果的int[length=输入数组的长度]
        int[] result = new int[T.length];
//        遍历输入数组
        for (int i = 0; i < T.length; i++) {
            //        对于数字每个元素向后进行比较，直到找到大于本次遍历的元素
            //        计算找到的元素和当前元素之间的距离，保存到结果数组中
            for (int j = i + 1; j < T.length; j++) {
                if (T[j] > T[i]){
                    result[i] = j - i;
                    //        跳出循环，去比较下一个元素
                    break;
                }
            }
        }

//        返回结果数组
        return result;
    }
}
